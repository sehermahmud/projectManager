{"ast":null,"code":"var _jsxFileName = \"/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/src/ui/EnhancedTable.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, state } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport ls from \"local-storage\";\nimport { format } from \"date-fns\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"date\",\n  label: \"Date\"\n}, {\n  id: \"service\",\n  label: \"Service\"\n}, {\n  id: \"features\",\n  label: \"Features\"\n}, {\n  id: \"complexity\",\n  label: \"Complexity\"\n}, {\n  id: \"platforms\",\n  label: \"Platforms\"\n}, {\n  id: \"users\",\n  label: \"Users\"\n}, {\n  id: \"total\",\n  label: \"Total\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), headCells.map(headCell => __jsx(TableCell, {\n    key: headCell.id,\n    align: \"center\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(TableSortLabel, {\n    hideSortIcon: true,\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? __jsx(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  },\n  menu: {\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"#fff\"\n    }\n  },\n  totalFilter: {\n    fontSize: \"2rem\",\n    color: theme.palette.common.orange\n  },\n  dollarSign: {\n    fontSize: \"1.5rem\",\n    color: theme.palette.common.orange\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  const [undo, setUndo] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [alert, setAlert] = React.useState({\n    open: false,\n    color: \"#FF3232\",\n    message: \"Row deleted!\"\n  });\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const onDelete = () => {\n    const newRows = [...props.rows];\n    const selectedRows = newRows.filter(row => props.selected.includes(row.name));\n    selectedRows.map(row => row.search = false);\n    props.setRows(newRows);\n    setUndo(selectedRows);\n    props.setSelected([]);\n    setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n      open: true\n    }));\n  };\n\n  const onUndo = () => {\n    setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n      open: false\n    }));\n    const newRows = [...props.rows];\n    const redo = [...undo];\n    redo.map(row => row.search = true);\n    Array.prototype.push.apply(newRows, ...redo);\n    props.setRows(newRows);\n  };\n\n  const handleTotalFilter = event => {\n    props.setFilterPrice(event.target.value);\n\n    if (event.target.value !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map(row => eval(`${event.target.value} ${props.totalFilter === \"=\" ? \"===\" : props.totalFilter} ${row.total.slice(1, row.total.length)}`) ? row.search = true : row.search = false);\n      props.setRows(newRows);\n    } else {\n      const newRows = [...props.rows];\n      newRows.map(row => row.search = true);\n      props.setRows(newRows);\n    }\n  };\n\n  const filterChange = operator => {\n    if (props.filterPrice !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map(row => eval(`${props.filterPrice} ${operator === \"=\" ? \"===\" : operator} ${row.total.slice(1, row.total.length)}`) ? row.search = true : row.search = false);\n      props.setRows(newRows);\n    }\n  };\n\n  return __jsx(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? __jsx(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, numSelected, \" selected\") : __jsx(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, null), numSelected > 0 ? __jsx(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteIcon, {\n    style: {\n      fontSize: 30\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }))) : __jsx(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"filter list\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, __jsx(FilterListIcon, {\n    style: {\n      fontSize: 50\n    },\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }))), __jsx(Snackbar, {\n    open: alert.open,\n    ContentProps: {\n      style: {\n        backgroundColor: alert.color\n      }\n    },\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    message: alert.message,\n    onClose: (event, reason) => {\n      if (reason === \"clickaway\") {\n        setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n          open: false\n        }));\n        const newRows = [...props.rows];\n        const names = [...undo.map(row => row.name)];\n        props.setRows(newRows.filter(row => !names.includes(row.name)));\n      }\n    },\n    action: __jsx(Button, {\n      onClick: onUndo,\n      style: {\n        color: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, \"Undo\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: openMenu,\n    onClose: handleClose,\n    elevation: 0,\n    style: {\n      zIndex: 1302\n    },\n    keepMounted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, __jsx(MenuItem, {\n    classes: {\n      root: classes.menu\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    value: props.filterPrice,\n    onChange: handleTotalFilter,\n    placeholder: \"Enter a price to filter\",\n    InputProps: {\n      type: \"number\",\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: classes.dollarSign,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      }, \"$\")),\n      endAdornment: __jsx(InputAdornment, {\n        onClick: () => {\n          props.setTotalFilter(props.totalFilter === \">\" ? \"<\" : props.totalFilter === \"<\" ? \"=\" : \">\");\n          filterChange(props.totalFilter === \">\" ? \"<\" : props.totalFilter === \"<\" ? \"=\" : \">\");\n        },\n        position: \"end\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: classes.totalFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 19\n        }\n      }, props.totalFilter))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  chip: {\n    marginRight: \"2em\",\n    backgroundColor: theme.palette.common.blue,\n    color: \"#fff\"\n  }\n}));\n\nconst Project = props => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 3\n  }\n}, __jsx(TableCell, {\n  align: \"center\",\n  component: \"th\",\n  id: props.labelId,\n  scope: \"row\",\n  padding: \"none\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }\n}, props.project.row.name), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }\n}, props.project.row.date), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }\n}, props.project.row.service), __jsx(TableCell, {\n  align: \"center\",\n  style: {\n    width: \"5em\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }\n}, props.project.row.features), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }\n}, props.project.row.complexity), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }\n}, props.project.row.platforms), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }\n}, props.project.row.users), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }\n}, props.project.row.total));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterPrice, setFilterPrice] = React.useState(\"\");\n  const [totalFilter, setTotalFilter] = React.useState(\">\");\n  const [projectDatas, setProjectDatas] = React.useState([]);\n  const projects = [];\n\n  const projected = () => {\n    try {\n      const res = axios(\"http://localhost:5000/api/places/:pid\");\n      const responseData = res.data.data;\n      console.log(responseData);\n      return responseData;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  axios.get(\"http://localhost:5000/api/places/:pid\", {\n    params: {\n      name: props.name,\n      service: props.service,\n      features: props.features,\n      complexity: props.complexity,\n      platforms: props.platforms,\n      users: props.users,\n      total: props.total,\n      true: true\n    }\n  }).then(response => {\n    projects({\n      projects: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    props.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    props.setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const switchFilters = () => {\n    const {\n      websiteChecked,\n      iOSChecked,\n      androidChecked,\n      softwareChecked\n    } = props;\n    const websites = props.rows.filter(row => websiteChecked ? row.service === \"Website\" : null);\n    const iOSApps = props.rows.filter(row => iOSChecked ? row.platforms.includes(\"iOS\") : null);\n    const androidApps = props.rows.filter(row => androidChecked ? row.platforms.includes(\"Android\") : null);\n    const softwareApps = props.rows.filter(row => softwareChecked ? row.service === \"Custom Software\" : null);\n\n    if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n      return props.rows;\n    } else {\n      let newRows = websites.concat(iOSApps.filter(item => websites.indexOf(item) < 0));\n      let newRows2 = newRows.concat(androidApps.filter(item => newRows.indexOf(item) < 0));\n      let newRows3 = newRows2.concat(softwareApps.filter(item => newRows2.indexOf(item) < 0));\n      return newRows3;\n    }\n  };\n\n  const priceFilters = switchRows => {\n    if (filterPrice !== \"\") {\n      const newRows = [...switchRows];\n      newRows.map(row => eval(`${filterPrice} ${totalFilter === \"=\" ? \"===\" : totalFilter} ${row.total.slice(1, row.total.length)}`) ? row.search === false ? null : row.search = true : row.search = false);\n      return newRows;\n    } else {\n      return switchRows;\n    }\n  };\n\n  const projectList = props => {\n    projects.map(currentproject => {\n      return __jsx(Project, {\n        project: currentproject,\n        key: currentproject._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 14\n        }\n      });\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    rows: props.rows,\n    setRows: props.setRows,\n    selected: selected,\n    setSelected: setSelected,\n    numSelected: selected.length,\n    filterPrice: filterPrice,\n    setFilterPrice: setFilterPrice,\n    totalFilter: totalFilter,\n    setTotalFilter: setTotalFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: props.rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 13\n    }\n  }, stableSort(priceFilters(switchFilters()).filter(row => row.search), getSorting(order, orderBy)).slice(props.page * rowsPerPage, props.page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    {\n      Object.keys(row.name).map(function (item, i) {\n        let currentProjectData = {};\n        currentProjectData = projected(row.name[item]).then(result => {\n          projects = JSON.parse(JSON.stringify(result[0]));\n          console.log(projects);\n          setProjectDatas(old => [...old, projects]); // setCurrentProject(projects);\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    }\n    {\n      setProjectDatas && setProjectDatas.map(function (item, i) {\n        console.log(item);\n        return __jsx(TableRow, {\n          hover: true,\n          onClick: event => handleClick(event, row.name),\n          role: \"checkbox\",\n          \"aria-checked\": isItemSelected,\n          tabIndex: -1,\n          key: row.name,\n          selected: isItemSelected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 21\n          }\n        }, __jsx(TableCell, {\n          padding: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 23\n          }\n        }, __jsx(Checkbox, {\n          checked: props.isItemSelected,\n          inputProps: {\n            \"aria-labelledby\": props.labelId\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 25\n          }\n        })), __jsx(TableCell, {\n          align: \"center\",\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          padding: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 23\n          }\n        }, item.row.name), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 23\n          }\n        }, item.row.date), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 23\n          }\n        }, item.row.service), __jsx(TableCell, {\n          align: \"center\",\n          style: {\n            width: \"5em\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 23\n          }\n        }, item.row.features), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 23\n          }\n        }, item.row.complexity), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 23\n          }\n        }, item.row.platforms), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 23\n          }\n        }, item.row.users), __jsx(TableCell, {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 23\n          }\n        }, item.row.total));\n      });\n    }\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: priceFilters(switchFilters()).filter(row => row.search).length,\n    rowsPerPage: rowsPerPage,\n    page: props.page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 11\n    }\n  }, filterPrice !== \"\" ? __jsx(Chip, {\n    onDelete: () => {\n      setFilterPrice(\"\");\n      const newRows = [...props.rows];\n      newRows.map(row => row.search = true);\n      props.setRows(newRows);\n    },\n    className: classes.chip,\n    label: totalFilter === \">\" ? `Less than $${filterPrice}` : totalFilter === \"<\" ? `Greater than $${filterPrice}` : `Equal to $${filterPrice}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 15\n    }\n  }) : null))));\n} // const handleRequestSort = (event, property) => {\n//   const isDesc = orderBy === property && order === \"desc\";\n//   setOrder(isDesc ? \"asc\" : \"desc\");\n//   setOrderBy(property);\n// };\n// const handleSelectAllClick = (event) => {\n//   if (event.target.checked) {\n//     const newSelecteds = props.rows.map((n) => n.name);\n//     setSelected(newSelecteds);\n//     return;\n//   }\n//   setSelected([]);\n// };\n// const handleClick = (event, name) => {\n//   const selectedIndex = selected.indexOf(name);\n//   let newSelected = [];\n//   if (selectedIndex === -1) {\n//     newSelected = newSelected.concat(selected, name);\n//   } else if (selectedIndex === 0) {\n//     newSelected = newSelected.concat(selected.slice(1));\n//   } else if (selectedIndex === selected.length - 1) {\n//     newSelected = newSelected.concat(selected.slice(0, -1));\n//   } else if (selectedIndex > 0) {\n//     newSelected = newSelected.concat(\n//       selected.slice(0, selectedIndex),\n//       selected.slice(selectedIndex + 1)\n//     );\n//   }\n//   setSelected(newSelected);\n// };\n// const handleChangePage = (event, newPage) => {\n//   props.setPage(newPage);\n// };\n// const handleChangeRowsPerPage = (event) => {\n//   setRowsPerPage(parseInt(event.target.value, 10));\n//   props.setPage(0);\n// };\n// const isSelected = (name) => selected.indexOf(name) !== -1;\n// const switchFilters = () => {\n//   const { websiteChecked, iOSChecked, androidChecked, softwareChecked } = props;\n//   const websites = props.rows.filter((row) =>\n//     websiteChecked ? row.service === \"Website\" : null\n//   );\n//   const iOSApps = props.rows.filter((row) =>\n//     iOSChecked ? row.platforms.includes(\"iOS\") : null\n//   );\n//   const androidApps = props.rows.filter((row) =>\n//     androidChecked ? row.platforms.includes(\"Android\") : null\n//   );\n//   const softwareApps = props.rows.filter((row) =>\n//     softwareChecked ? row.service === \"Custom Software\" : null\n//   );\n//   if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n//     return props.rows;\n//   } else {\n//     let newRows = websites.concat(\n//       iOSApps.filter((item) => websites.indexOf(item) < 0)\n//     );\n//     let newRows2 = newRows.concat(\n//       androidApps.filter((item) => newRows.indexOf(item) < 0)\n//     );\n//     let newRows3 = newRows2.concat(\n//       softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n//     );\n//     return newRows3;\n//   }\n// };\n// const priceFilters = (switchRows) => {\n//   if (filterPrice !== \"\") {\n//     const newRows = [...switchRows];\n//     newRows.map((row) =>\n//       eval(\n//         `${filterPrice} ${\n//           totalFilter === \"=\" ? \"===\" : totalFilter\n//         } ${row.total.slice(1, row.total.length)}`\n//       )\n//         ? row.search === false\n//           ? null\n//           : (row.search = true)\n//         : (row.search = false)\n//     );\n//     return newRows;\n//   } else {\n//     return switchRows;\n//   }\n// };\n// const Project = (props) => (\n//   <React.Fragment>\n//     <TableCell\n//       align=\"center\"\n//       component=\"th\"\n//       id={labelId}\n//       scope=\"row\"\n//       padding=\"none\"\n//     >\n//       {props.project.row.name}\n//     </TableCell>\n//     <TableCell align=\"center\">{props.project.row.date}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.service}</TableCell>\n//     <TableCell align=\"center\" style={{ width: \"5em\" }}>\n//       {props.project.row.features}\n//     </TableCell>\n//     <TableCell align=\"center\">{props.project.row.complexity}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.platforms}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.users}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.total}</TableCell>\n//   </React.Fragment>\n// );\n// export default class EnhancedTable extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.deleteProjects = this.deleteProjects.bind(this);\n//     this.state = { projects: [] };\n//   }\n//   componentDidMount() {\n//     axios\n//       .get(\"http://localhost:5000/api/places/project/:pid\")\n//       .then((response) => {\n//         this.setState({ projects: response.data });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }\n//   deleteProjects(id) {\n//     axios\n//       .delete(\"http://localhost:5000/api/places\" + id)\n//       .then((res) => console.log(res.data));\n//     this.setState({\n//       projects: this.state.projects.filter((el) => el._id !== id),\n//     });\n//   }\n//   projectList() {\n//     return this.state.projects.map((currentproject) => {\n//       return (\n//         <Project\n//           project={currentproject}\n//           deleteProjects={this.deleteProjects}\n//           key={currentproject._id}\n//         />\n//       );\n//     });\n//   }\n//   render() {\n//     const { classes } = this.props;\n//     return (\n//       <div className={classes.root}>\n//         <Paper className={classes.paper} elevation={0}>\n//           <EnhancedTableToolbar\n//             rows={props.rows}\n//             setRows={props.setRows}\n//             selected={selected}\n//             setSelected={setSelected}\n//             numSelected={selected.length}\n//             filterPrice={filterPrice}\n//             setFilterPrice={setFilterPrice}\n//             totalFilter={totalFilter}\n//             setTotalFilter={setTotalFilter}\n//           />\n//           <TableContainer>\n//             <Table\n//               className={classes.table}\n//               aria-labelledby=\"tableTitle\"\n//               size=\"medium\"\n//               aria-label=\"enhanced table\"\n//             >\n//               <EnhancedTableHead\n//                 classes={classes}\n//                 numSelected={selected.length}\n//                 order={order}\n//                 orderBy={orderBy}\n//                 onSelectAllClick={handleSelectAllClick}\n//                 onRequestSort={handleRequestSort}\n//                 rowCount={props.rows.length}\n//               />\n//               <TableBody>\n//                 {stableSort(\n//                   priceFilters(switchFilters()).filter((row) => row.search),\n//                   getSorting(order, orderBy)\n//                 )\n//                   .slice(\n//                     props.page * rowsPerPage,\n//                     props.page * rowsPerPage + rowsPerPage\n//                   )\n//                   .map((row, index) => {\n//                     const isItemSelected = isSelected(row.name);\n//                     const labelId = `enhanced-table-checkbox-${index}`;\n//                     return (\n//                       <TableRow\n//                         hover\n//                         onClick={(event) => handleClick(event, row.name)}\n//                         role=\"checkbox\"\n//                         aria-checked={isItemSelected}\n//                         tabIndex={-1}\n//                         key={row.name}\n//                         selected={isItemSelected}\n//                       >\n//                         <TableCell padding=\"checkbox\">\n//                           <Checkbox\n//                             checked={isItemSelected}\n//                             inputProps={{ \"aria-labelledby\": labelId }}\n//                           />\n//                         </TableCell>\n//                         {this.projectList()}\n//                       </TableRow>\n//                     );\n//                   })}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//           <TablePagination\n//             rowsPerPageOptions={[5, 10, 25]}\n//             component=\"div\"\n//             count={\n//               priceFilters(switchFilters()).filter((row) => row.search).length\n//             }\n//             rowsPerPage={rowsPerPage}\n//             page={props.page}\n//             onChangePage={handleChangePage}\n//             onChangeRowsPerPage={handleChangeRowsPerPage}\n//           />\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               {filterPrice !== \"\" ? (\n//                 <Chip\n//                   onDelete={() => {\n//                     setFilterPrice(\"\");\n//                     const newRows = [...props.rows];\n//                     newRows.map((row) => (row.search = true));\n//                     props.setRows(newRows);\n//                   }}\n//                   className={classes.chip}\n//                   label={\n//                     totalFilter === \">\"\n//                       ? `Less than $${filterPrice}`\n//                       : totalFilter === \"<\"\n//                       ? `Greater than $${filterPrice}`\n//                       : `Equal to $${filterPrice}`\n//                   }\n//                 />\n//               ) : null}\n//             </Grid>\n//           </Grid>\n//         </Paper>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/src/ui/EnhancedTable.js"],"names":["React","Component","state","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","Snackbar","Button","Menu","MenuItem","TextField","InputAdornment","Chip","Grid","axios","ls","format","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","menu","totalFilter","fontSize","common","orange","dollarSign","EnhancedTableToolbar","undo","setUndo","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","alert","setAlert","open","message","handleClick","e","currentTarget","handleClose","onDelete","newRows","rows","selectedRows","filter","row","selected","includes","name","search","setRows","setSelected","onUndo","redo","Array","prototype","push","apply","handleTotalFilter","setFilterPrice","target","value","eval","total","slice","length","filterChange","operator","filterPrice","style","vertical","horizontal","reason","names","zIndex","startAdornment","endAdornment","setTotalFilter","cursor","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","chip","marginRight","blue","Project","labelId","project","date","service","features","complexity","platforms","users","EnhancedTable","setOrder","setOrderBy","rowsPerPage","setRowsPerPage","projectDatas","setProjectDatas","projects","projected","res","responseData","data","console","log","err","get","params","true","then","response","catch","error","handleRequestSort","isDesc","handleSelectAllClick","checked","newSelecteds","n","selectedIndex","indexOf","newSelected","concat","handleChangePage","newPage","setPage","handleChangeRowsPerPage","parseInt","isSelected","switchFilters","websiteChecked","iOSChecked","androidChecked","softwareChecked","websites","iOSApps","androidApps","softwareApps","item","newRows2","newRows3","priceFilters","switchRows","projectList","currentproject","_id","page","isItemSelected","Object","keys","i","currentProjectData","result","JSON","parse","stringify","old"],"mappings":"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AEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, state } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport ls from \"local-storage\";\nimport { format } from \"date-fns\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: \"name\", label: \"Name\" },\n  { id: \"date\", label: \"Date\" },\n  { id: \"service\", label: \"Service\" },\n  { id: \"features\", label: \"Features\" },\n  { id: \"complexity\", label: \"Complexity\" },\n  { id: \"platforms\", label: \"Platforms\" },\n  { id: \"users\", label: \"Users\" },\n  { id: \"total\", label: \"Total\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n  menu: {\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n  totalFilter: {\n    fontSize: \"2rem\",\n    color: theme.palette.common.orange,\n  },\n  dollarSign: {\n    fontSize: \"1.5rem\",\n    color: theme.palette.common.orange,\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n  const [undo, setUndo] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openMenu, setOpenMenu] = React.useState(false);\n\n  const [alert, setAlert] = React.useState({\n    open: false,\n    color: \"#FF3232\",\n    message: \"Row deleted!\",\n  });\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const onDelete = () => {\n    const newRows = [...props.rows];\n    const selectedRows = newRows.filter((row) =>\n      props.selected.includes(row.name)\n    );\n    selectedRows.map((row) => (row.search = false));\n    props.setRows(newRows);\n\n    setUndo(selectedRows);\n    props.setSelected([]);\n    setAlert({ ...alert, open: true });\n  };\n\n  const onUndo = () => {\n    setAlert({ ...alert, open: false });\n    const newRows = [...props.rows];\n    const redo = [...undo];\n    redo.map((row) => (row.search = true));\n    Array.prototype.push.apply(newRows, ...redo);\n    props.setRows(newRows);\n  };\n\n  const handleTotalFilter = (event) => {\n    props.setFilterPrice(event.target.value);\n\n    if (event.target.value !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map((row) =>\n        eval(\n          `${event.target.value} ${\n            props.totalFilter === \"=\" ? \"===\" : props.totalFilter\n          } ${row.total.slice(1, row.total.length)}`\n        )\n          ? (row.search = true)\n          : (row.search = false)\n      );\n      props.setRows(newRows);\n    } else {\n      const newRows = [...props.rows];\n      newRows.map((row) => (row.search = true));\n      props.setRows(newRows);\n    }\n  };\n\n  const filterChange = (operator) => {\n    if (props.filterPrice !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map((row) =>\n        eval(\n          `${props.filterPrice} ${\n            operator === \"=\" ? \"===\" : operator\n          } ${row.total.slice(1, row.total.length)}`\n        )\n          ? (row.search = true)\n          : (row.search = false)\n      );\n      props.setRows(newRows);\n    }\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {null}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={onDelete}>\n            <DeleteIcon style={{ fontSize: 30 }} color=\"primary\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={handleClick}>\n            <FilterListIcon style={{ fontSize: 50 }} color=\"secondary\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Snackbar\n        open={alert.open}\n        ContentProps={{\n          style: {\n            backgroundColor: alert.color,\n          },\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        message={alert.message}\n        onClose={(event, reason) => {\n          if (reason === \"clickaway\") {\n            setAlert({ ...alert, open: false });\n            const newRows = [...props.rows];\n            const names = [...undo.map((row) => row.name)];\n            props.setRows(newRows.filter((row) => !names.includes(row.name)));\n          }\n        }}\n        action={\n          <Button onClick={onUndo} style={{ color: \"#fff\" }}>\n            Undo\n          </Button>\n        }\n      />\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n      >\n        <MenuItem classes={{ root: classes.menu }}>\n          <TextField\n            value={props.filterPrice}\n            onChange={handleTotalFilter}\n            placeholder=\"Enter a price to filter\"\n            InputProps={{\n              type: \"number\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <span className={classes.dollarSign}>$</span>\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment\n                  onClick={() => {\n                    props.setTotalFilter(\n                      props.totalFilter === \">\"\n                        ? \"<\"\n                        : props.totalFilter === \"<\"\n                        ? \"=\"\n                        : \">\"\n                    );\n                    filterChange(\n                      props.totalFilter === \">\"\n                        ? \"<\"\n                        : props.totalFilter === \"<\"\n                        ? \"=\"\n                        : \">\"\n                    );\n                  }}\n                  position=\"end\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <span className={classes.totalFilter}>\n                    {props.totalFilter}\n                  </span>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </MenuItem>\n      </Menu>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  chip: {\n    marginRight: \"2em\",\n    backgroundColor: theme.palette.common.blue,\n    color: \"#fff\",\n  },\n}));\n\nconst Project = (props) => (\n  <React.Fragment>\n    <TableCell\n      align=\"center\"\n      component=\"th\"\n      id={props.labelId}\n      scope=\"row\"\n      padding=\"none\"\n    >\n      {props.project.row.name}\n    </TableCell>\n    <TableCell align=\"center\">{props.project.row.date}</TableCell>\n    <TableCell align=\"center\">{props.project.row.service}</TableCell>\n    <TableCell align=\"center\" style={{ width: \"5em\" }}>\n      {props.project.row.features}\n    </TableCell>\n    <TableCell align=\"center\">{props.project.row.complexity}</TableCell>\n    <TableCell align=\"center\">{props.project.row.platforms}</TableCell>\n    <TableCell align=\"center\">{props.project.row.users}</TableCell>\n    <TableCell align=\"center\">{props.project.row.total}</TableCell>\n  </React.Fragment>\n);\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterPrice, setFilterPrice] = React.useState(\"\");\n  const [totalFilter, setTotalFilter] = React.useState(\">\");\n  const [projectDatas, setProjectDatas] = React.useState([]);\n\n  const projects = [];\n\n  const projected = () => {\n    try {\n      const res = axios(\n        \"http://localhost:5000/api/places/:pid\"\n      );\n      const responseData = res.data.data;\n      console.log(responseData);\n      return responseData;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  axios\n    .get(\"http://localhost:5000/api/places/:pid\", {\n      params: {\n        name: props.name,\n        service: props.service,\n        features: props.features,\n        complexity: props.complexity,\n        platforms: props.platforms,\n        users: props.users,\n        total: props.total,\n        true: true,\n      },\n    })\n    .then((response) => {\n      projects({ projects: response.data });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    props.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    props.setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const switchFilters = () => {\n    const {\n      websiteChecked,\n      iOSChecked,\n      androidChecked,\n      softwareChecked,\n    } = props;\n\n    const websites = props.rows.filter((row) =>\n      websiteChecked ? row.service === \"Website\" : null\n    );\n\n    const iOSApps = props.rows.filter((row) =>\n      iOSChecked ? row.platforms.includes(\"iOS\") : null\n    );\n\n    const androidApps = props.rows.filter((row) =>\n      androidChecked ? row.platforms.includes(\"Android\") : null\n    );\n\n    const softwareApps = props.rows.filter((row) =>\n      softwareChecked ? row.service === \"Custom Software\" : null\n    );\n\n    if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n      return props.rows;\n    } else {\n      let newRows = websites.concat(\n        iOSApps.filter((item) => websites.indexOf(item) < 0)\n      );\n\n      let newRows2 = newRows.concat(\n        androidApps.filter((item) => newRows.indexOf(item) < 0)\n      );\n\n      let newRows3 = newRows2.concat(\n        softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n      );\n\n      return newRows3;\n    }\n  };\n\n  const priceFilters = (switchRows) => {\n    if (filterPrice !== \"\") {\n      const newRows = [...switchRows];\n      newRows.map((row) =>\n        eval(\n          `${filterPrice} ${\n            totalFilter === \"=\" ? \"===\" : totalFilter\n          } ${row.total.slice(1, row.total.length)}`\n        )\n          ? row.search === false\n            ? null\n            : (row.search = true)\n          : (row.search = false)\n      );\n      return newRows;\n    } else {\n      return switchRows;\n    }\n  };\n\n  const projectList = (props) => {\n    projects.map((currentproject) => {\n      return <Project project={currentproject} key={currentproject._id} />;\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper} elevation={0}>\n        <EnhancedTableToolbar\n          rows={props.rows}\n          setRows={props.setRows}\n          selected={selected}\n          setSelected={setSelected}\n          numSelected={selected.length}\n          filterPrice={filterPrice}\n          setFilterPrice={setFilterPrice}\n          totalFilter={totalFilter}\n          setTotalFilter={setTotalFilter}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.rows.length}\n            />\n            <TableBody>\n              {stableSort(\n                priceFilters(switchFilters()).filter((row) => row.search),\n                getSorting(order, orderBy)\n              )\n                .slice(\n                  props.page * rowsPerPage,\n                  props.page * rowsPerPage + rowsPerPage\n                )\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  {Object.keys(row.name).map(function(item, i) {\n                    let currentProjectData = {};\n                    currentProjectData = projected(row.name[item])\n                      .then(result => {\n                        projects = JSON.parse(JSON.stringify(result[0]));\n                        console.log(projects);\n                        setProjectDatas(old => [...old, projects]);\n        \n                        // setCurrentProject(projects);\n                      })\n                      .catch(err => {\n                        console.log(err);\n                      });\n                  })}\n                  {setProjectDatas &&\n                    setProjectDatas.map(function(item, i) {\n                      console.log(item);\n                    \n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={props.isItemSelected}\n                          inputProps={{ \"aria-labelledby\": props.labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {item.row.name}\n                      </TableCell>\n                      <TableCell align=\"center\">{item.row.date}</TableCell>\n                      <TableCell align=\"center\">{item.row.service}</TableCell>\n                      <TableCell align=\"center\" style={{ width: \"5em\" }}>\n                        {item.row.features}\n                      </TableCell>\n                      <TableCell align=\"center\">{item.row.complexity}</TableCell>\n                      <TableCell align=\"center\">{item.row.platforms}</TableCell>\n                      <TableCell align=\"center\">{item.row.users}</TableCell>\n                      <TableCell align=\"center\">{item.row.total}</TableCell>\n                    </TableRow>\n                  );\n                  })}\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={\n            priceFilters(switchFilters()).filter((row) => row.search).length\n          }\n          rowsPerPage={rowsPerPage}\n          page={props.page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            {filterPrice !== \"\" ? (\n              <Chip\n                onDelete={() => {\n                  setFilterPrice(\"\");\n                  const newRows = [...props.rows];\n                  newRows.map((row) => (row.search = true));\n                  props.setRows(newRows);\n                }}\n                className={classes.chip}\n                label={\n                  totalFilter === \">\"\n                    ? `Less than $${filterPrice}`\n                    : totalFilter === \"<\"\n                    ? `Greater than $${filterPrice}`\n                    : `Equal to $${filterPrice}`\n                }\n              />\n            ) : null}\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\n// const handleRequestSort = (event, property) => {\n//   const isDesc = orderBy === property && order === \"desc\";\n//   setOrder(isDesc ? \"asc\" : \"desc\");\n//   setOrderBy(property);\n// };\n\n// const handleSelectAllClick = (event) => {\n//   if (event.target.checked) {\n//     const newSelecteds = props.rows.map((n) => n.name);\n//     setSelected(newSelecteds);\n//     return;\n//   }\n//   setSelected([]);\n// };\n\n// const handleClick = (event, name) => {\n//   const selectedIndex = selected.indexOf(name);\n//   let newSelected = [];\n\n//   if (selectedIndex === -1) {\n//     newSelected = newSelected.concat(selected, name);\n//   } else if (selectedIndex === 0) {\n//     newSelected = newSelected.concat(selected.slice(1));\n//   } else if (selectedIndex === selected.length - 1) {\n//     newSelected = newSelected.concat(selected.slice(0, -1));\n//   } else if (selectedIndex > 0) {\n//     newSelected = newSelected.concat(\n//       selected.slice(0, selectedIndex),\n//       selected.slice(selectedIndex + 1)\n//     );\n//   }\n\n//   setSelected(newSelected);\n// };\n\n// const handleChangePage = (event, newPage) => {\n//   props.setPage(newPage);\n// };\n\n// const handleChangeRowsPerPage = (event) => {\n//   setRowsPerPage(parseInt(event.target.value, 10));\n//   props.setPage(0);\n// };\n\n// const isSelected = (name) => selected.indexOf(name) !== -1;\n\n// const switchFilters = () => {\n//   const { websiteChecked, iOSChecked, androidChecked, softwareChecked } = props;\n\n//   const websites = props.rows.filter((row) =>\n//     websiteChecked ? row.service === \"Website\" : null\n//   );\n\n//   const iOSApps = props.rows.filter((row) =>\n//     iOSChecked ? row.platforms.includes(\"iOS\") : null\n//   );\n\n//   const androidApps = props.rows.filter((row) =>\n//     androidChecked ? row.platforms.includes(\"Android\") : null\n//   );\n\n//   const softwareApps = props.rows.filter((row) =>\n//     softwareChecked ? row.service === \"Custom Software\" : null\n//   );\n\n//   if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n//     return props.rows;\n//   } else {\n//     let newRows = websites.concat(\n//       iOSApps.filter((item) => websites.indexOf(item) < 0)\n//     );\n\n//     let newRows2 = newRows.concat(\n//       androidApps.filter((item) => newRows.indexOf(item) < 0)\n//     );\n\n//     let newRows3 = newRows2.concat(\n//       softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n//     );\n\n//     return newRows3;\n//   }\n// };\n\n// const priceFilters = (switchRows) => {\n//   if (filterPrice !== \"\") {\n//     const newRows = [...switchRows];\n//     newRows.map((row) =>\n//       eval(\n//         `${filterPrice} ${\n//           totalFilter === \"=\" ? \"===\" : totalFilter\n//         } ${row.total.slice(1, row.total.length)}`\n//       )\n//         ? row.search === false\n//           ? null\n//           : (row.search = true)\n//         : (row.search = false)\n//     );\n//     return newRows;\n//   } else {\n//     return switchRows;\n//   }\n// };\n\n// const Project = (props) => (\n//   <React.Fragment>\n//     <TableCell\n//       align=\"center\"\n//       component=\"th\"\n//       id={labelId}\n//       scope=\"row\"\n//       padding=\"none\"\n//     >\n//       {props.project.row.name}\n//     </TableCell>\n//     <TableCell align=\"center\">{props.project.row.date}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.service}</TableCell>\n//     <TableCell align=\"center\" style={{ width: \"5em\" }}>\n//       {props.project.row.features}\n//     </TableCell>\n//     <TableCell align=\"center\">{props.project.row.complexity}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.platforms}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.users}</TableCell>\n//     <TableCell align=\"center\">{props.project.row.total}</TableCell>\n//   </React.Fragment>\n// );\n\n// export default class EnhancedTable extends Component {\n\n//   constructor(props) {\n//     super(props);\n\n//     this.deleteProjects = this.deleteProjects.bind(this);\n\n//     this.state = { projects: [] };\n//   }\n\n//   componentDidMount() {\n//     axios\n//       .get(\"http://localhost:5000/api/places/project/:pid\")\n//       .then((response) => {\n//         this.setState({ projects: response.data });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }\n\n//   deleteProjects(id) {\n//     axios\n//       .delete(\"http://localhost:5000/api/places\" + id)\n//       .then((res) => console.log(res.data));\n\n//     this.setState({\n//       projects: this.state.projects.filter((el) => el._id !== id),\n//     });\n//   }\n\n//   projectList() {\n//     return this.state.projects.map((currentproject) => {\n//       return (\n//         <Project\n//           project={currentproject}\n//           deleteProjects={this.deleteProjects}\n//           key={currentproject._id}\n//         />\n//       );\n//     });\n//   }\n\n//   render() {\n//     const { classes } = this.props;\n//     return (\n//       <div className={classes.root}>\n//         <Paper className={classes.paper} elevation={0}>\n//           <EnhancedTableToolbar\n//             rows={props.rows}\n//             setRows={props.setRows}\n//             selected={selected}\n//             setSelected={setSelected}\n//             numSelected={selected.length}\n//             filterPrice={filterPrice}\n//             setFilterPrice={setFilterPrice}\n//             totalFilter={totalFilter}\n//             setTotalFilter={setTotalFilter}\n//           />\n//           <TableContainer>\n//             <Table\n//               className={classes.table}\n//               aria-labelledby=\"tableTitle\"\n//               size=\"medium\"\n//               aria-label=\"enhanced table\"\n//             >\n//               <EnhancedTableHead\n//                 classes={classes}\n//                 numSelected={selected.length}\n//                 order={order}\n//                 orderBy={orderBy}\n//                 onSelectAllClick={handleSelectAllClick}\n//                 onRequestSort={handleRequestSort}\n//                 rowCount={props.rows.length}\n//               />\n//               <TableBody>\n//                 {stableSort(\n//                   priceFilters(switchFilters()).filter((row) => row.search),\n//                   getSorting(order, orderBy)\n//                 )\n//                   .slice(\n//                     props.page * rowsPerPage,\n//                     props.page * rowsPerPage + rowsPerPage\n//                   )\n//                   .map((row, index) => {\n//                     const isItemSelected = isSelected(row.name);\n//                     const labelId = `enhanced-table-checkbox-${index}`;\n\n//                     return (\n//                       <TableRow\n//                         hover\n//                         onClick={(event) => handleClick(event, row.name)}\n//                         role=\"checkbox\"\n//                         aria-checked={isItemSelected}\n//                         tabIndex={-1}\n//                         key={row.name}\n//                         selected={isItemSelected}\n//                       >\n//                         <TableCell padding=\"checkbox\">\n//                           <Checkbox\n//                             checked={isItemSelected}\n//                             inputProps={{ \"aria-labelledby\": labelId }}\n//                           />\n//                         </TableCell>\n//                         {this.projectList()}\n//                       </TableRow>\n//                     );\n//                   })}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//           <TablePagination\n//             rowsPerPageOptions={[5, 10, 25]}\n//             component=\"div\"\n//             count={\n//               priceFilters(switchFilters()).filter((row) => row.search).length\n//             }\n//             rowsPerPage={rowsPerPage}\n//             page={props.page}\n//             onChangePage={handleChangePage}\n//             onChangeRowsPerPage={handleChangeRowsPerPage}\n//           />\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               {filterPrice !== \"\" ? (\n//                 <Chip\n//                   onDelete={() => {\n//                     setFilterPrice(\"\");\n//                     const newRows = [...props.rows];\n//                     newRows.map((row) => (row.search = true));\n//                     props.setRows(newRows);\n//                   }}\n//                   className={classes.chip}\n//                   label={\n//                     totalFilter === \">\"\n//                       ? `Less than $${filterPrice}`\n//                       : totalFilter === \"<\"\n//                       ? `Greater than $${filterPrice}`\n//                       : `Equal to $${filterPrice}`\n//                   }\n//                 />\n//               ) : null}\n//             </Grid>\n//           </Grid>\n//         </Paper>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}