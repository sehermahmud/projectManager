{"ast":null,"code":"var _jsxFileName = \"/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({}));\n\nfunction createData(name, date, service, features, complexity, platforms, users, total) {\n  return {\n    name,\n    date,\n    service,\n    features,\n    complexity,\n    platforms,\n    users,\n    total\n  };\n}\n\nexport default function ProjectManager() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: rows,\n    1: setRows\n  } = useState([createData(\"Seher Mahmud\", \"8/17/2020\", \"Website\", \"E-Commerce\", \"N/A\", \"N/A\", \"N/A\", \"$1500\", true), createData(\"Safin Mahmud\", \"10/17/19\", \"Custom Software\", \"GPS, Push Notifications, Users/Authentication, File Transfer\", \"Medium\", \"Web Application\", \"0-10\", \"$1600\", true), createData(\"Steve Jobs\", \"2/13/19\", \"Custom Software\", \"Photo/Video, File Transfer, Users/Authentication\", \"Low\", \"Web Application\", \"10-100\", \"$1250\", true), createData(\"Stan Smith\", \"2/13/19\", \"Mobile App\", \"Photo/Video, File Transfer, Users/Authentication\", \"Low\", \"iOS, Android\", \"10-100\", \"$1250\", true), createData(\"Albert Einstein\", \"2/13/19\", \"Mobile App\", \"Photo/Video, File Transfer, Users/Authentication\", \"Low\", \"Android\", \"10-100\", \"$1250\", true)]);\n  const {\n    0: websiteChecked,\n    1: setWebsiteChecked\n  } = useState(false);\n  const {\n    0: iOSChecked,\n    1: setiOSChecked\n  } = useState(false);\n  const {\n    0: androidChecked,\n    1: setAndroidChecked\n  } = useState(false);\n  const {\n    0: softwareChecked,\n    1: setSoftwareChecked\n  } = useState(false);\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    style: {\n      marginTop: \"2em\",\n      marginLeft: \"5em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Projects\")), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Search Project details or create a new entry\",\n    style: {\n      width: \"35em\",\n      marginLeft: \"5em\",\n      marginTop: \"2em\"\n    },\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, __jsx(AddIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    style: {\n      marginLeft: \"5em\",\n      marginTop: \"2em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    style: {\n      marginRight: \"5em\"\n    },\n    control: __jsx(Switch, {\n      checked: websiteChecked,\n      color: \"secondary\",\n      onChange: () => setWebsiteChecked(!websiteChecked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }),\n    label: \"Websites\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    style: {\n      marginRight: \"5em\"\n    },\n    control: __jsx(Switch, {\n      checked: iOSChecked,\n      color: \"secondary\",\n      onChange: () => setiOSChecked(!iOSChecked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }),\n    label: \"iOS Apps\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    style: {\n      marginRight: \"5em\"\n    },\n    control: __jsx(Switch, {\n      checked: androidChecked,\n      color: \"secondary\",\n      onChange: () => setAndroidChecked(!androidChecked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }),\n    label: \"Android Apps\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    style: {\n      marginRight: \"5em\"\n    },\n    control: __jsx(Switch, {\n      checked: softwareChecked,\n      color: \"secondary\",\n      onChange: () => setSoftwareChecked(!softwareChecked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }),\n    label: \"Custom Software\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Date\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"Service\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Features\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Complexity\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Platforms\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"Users\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"Total\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, rows.map((row, index) => __jsx(TableRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, row.name), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, row.date), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, row.service), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, row.features), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, row.complexity), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, row.platforms), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, row.users), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, row.total))))))));\n}","map":{"version":3,"sources":["/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/pages/index.js"],"names":["React","useState","Grid","Typography","makeStyles","useTheme","TextField","InputAdornment","AddIcon","Switch","FormGroup","FormControlLabel","Table","TableBody","TableHead","TableContainer","TableRow","TableCell","Paper","useStyles","theme","createData","name","date","service","features","complexity","platforms","users","total","ProjectManager","classes","rows","setRows","websiteChecked","setWebsiteChecked","iOSChecked","setiOSChecked","androidChecked","setAndroidChecked","softwareChecked","setSoftwareChecked","marginTop","marginLeft","width","endAdornment","marginRight","map","row","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction createData(\n  name,\n  date,\n  service,\n  features,\n  complexity,\n  platforms,\n  users,\n  total\n) {\n  return {\n    name,\n    date,\n    service,\n    features,\n    complexity,\n    platforms,\n    users,\n    total,\n  };\n}\n\nexport default function ProjectManager() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [rows, setRows] = useState([\n    createData(\n      \"Seher Mahmud\",\n      \"8/17/2020\",\n      \"Website\",\n      \"E-Commerce\",\n      \"N/A\",\n      \"N/A\",\n      \"N/A\",\n      \"$1500\",\n      true\n    ),\n    createData(\n      \"Safin Mahmud\",\n      \"10/17/19\",\n      \"Custom Software\",\n      \"GPS, Push Notifications, Users/Authentication, File Transfer\",\n      \"Medium\",\n      \"Web Application\",\n      \"0-10\",\n      \"$1600\",\n      true\n    ),\n    createData(\n      \"Steve Jobs\",\n      \"2/13/19\",\n      \"Custom Software\",\n      \"Photo/Video, File Transfer, Users/Authentication\",\n      \"Low\",\n      \"Web Application\",\n      \"10-100\",\n      \"$1250\",\n      true\n    ),\n    createData(\n      \"Stan Smith\",\n      \"2/13/19\",\n      \"Mobile App\",\n      \"Photo/Video, File Transfer, Users/Authentication\",\n      \"Low\",\n      \"iOS, Android\",\n      \"10-100\",\n      \"$1250\",\n      true\n    ),\n    createData(\n      \"Albert Einstein\",\n      \"2/13/19\",\n      \"Mobile App\",\n      \"Photo/Video, File Transfer, Users/Authentication\",\n      \"Low\",\n      \"Android\",\n      \"10-100\",\n      \"$1250\",\n      true\n    )\n  ]);\n\n  const [websiteChecked, setWebsiteChecked] = useState(false);\n  const [iOSChecked, setiOSChecked] = useState(false);\n  const [androidChecked, setAndroidChecked] = useState(false);\n  const [softwareChecked, setSoftwareChecked] = useState(false);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item style={{ marginTop: \"2em\", marginLeft: \"5em\" }}>\n        <Typography variant=\"h1\">Projects</Typography>\n      </Grid>\n      <Grid item>\n        <TextField\n          placeholder=\"Search Project details or create a new entry\"\n          style={{\n            width: \"35em\",\n            marginLeft: \"5em\",\n            marginTop: \"2em\",\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <AddIcon color=\"primary\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid item style={{ marginLeft: \"5em\", marginTop: \"2em\" }}>\n        <FormGroup row>\n          <FormControlLabel\n            style={{ marginRight: \"5em\" }}\n            control={\n              <Switch\n                checked={websiteChecked}\n                color=\"secondary\"\n                onChange={() => setWebsiteChecked(!websiteChecked)}\n              />\n            }\n            label=\"Websites\"\n            labelPlacement=\"start\"\n          />\n          <FormControlLabel\n            style={{ marginRight: \"5em\" }}\n            control={\n              <Switch\n                checked={iOSChecked}\n                color=\"secondary\"\n                onChange={() => setiOSChecked(!iOSChecked)}\n              />\n            }\n            label=\"iOS Apps\"\n            labelPlacement=\"start\"\n          />\n          <FormControlLabel\n            style={{ marginRight: \"5em\" }}\n            control={\n              <Switch\n                checked={androidChecked}\n                color=\"secondary\"\n                onChange={() => setAndroidChecked(!androidChecked)}\n              />\n            }\n            label=\"Android Apps\"\n            labelPlacement=\"start\"\n          />\n          <FormControlLabel\n            style={{ marginRight: \"5em\" }}\n            control={\n              <Switch\n                checked={softwareChecked}\n                color=\"secondary\"\n                onChange={() => setSoftwareChecked(!softwareChecked)}\n              />\n            }\n            label=\"Custom Software\"\n            labelPlacement=\"start\"\n          />\n        </FormGroup>\n      </Grid>\n      <Grid item>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Service</TableCell>\n                <TableCell>Features</TableCell>\n                <TableCell>Complexity</TableCell>\n                <TableCell>Platforms</TableCell>\n                <TableCell>Users</TableCell>\n                <TableCell>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, index) => <TableRow key={index}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.date}</TableCell>\n                <TableCell>{row.service}</TableCell>\n                <TableCell>{row.features}</TableCell>\n                <TableCell>{row.complexity}</TableCell>\n                <TableCell>{row.platforms}</TableCell>\n                <TableCell>{row.users}</TableCell>\n                <TableCell>{row.total}</TableCell>\n              </TableRow>)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}