{"ast":null,"code":"var _jsxFileName = \"/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/src/ui/EnhancedTable.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"date\",\n  label: \"Date\"\n}, {\n  id: \"service\",\n  label: \"Service\"\n}, {\n  id: \"features\",\n  label: \"Features\"\n}, {\n  id: \"complexity\",\n  label: \"Complexity\"\n}, {\n  id: \"platforms\",\n  label: \"Platforms\"\n}, {\n  id: \"users\",\n  label: \"Users\"\n}, {\n  id: \"total\",\n  label: \"Total\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), headCells.map(headCell => __jsx(TableCell, {\n    key: headCell.id,\n    align: \"center\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(TableSortLabel, {\n    hideSortIcon: true,\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? __jsx(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  },\n  menu: {\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"#fff\"\n    }\n  },\n  totalFilter: {\n    fontSize: \"2rem\",\n    color: theme.palette.common.orange\n  },\n  dollarSign: {\n    fontSize: \"1.5rem\",\n    color: theme.palette.common.orange\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  const [undo, setUndo] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [alert, setAlert] = React.useState({\n    open: false,\n    color: \"#FF3232\",\n    message: \"Row deleted!\"\n  });\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const onDelete = () => {\n    const newRows = [...props.rows];\n    const selectedRows = newRows.filter(row => props.selected.includes(row.name));\n    selectedRows.map(row => row.search = false);\n    props.setRows(newRows);\n    setUndo(selectedRows);\n    props.setSelected([]);\n    setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n      open: true\n    }));\n  };\n\n  const onUndo = () => {\n    setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n      open: false\n    }));\n    const newRows = [...props.rows];\n    const redo = [...undo];\n    redo.map(row => row.search = true);\n    Array.prototype.push.apply(newRows, ...redo);\n    props.setRows(newRows);\n  };\n\n  const handleTotalFilter = event => {\n    props.setFilterPrice(event.target.value);\n\n    if (event.target.value !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map(row => eval(`${event.target.value} ${props.totalFilter === \"=\" ? \"===\" : props.totalFilter} ${row.total.slice(1, row.total.length)}`) ? row.search = true : row.search = false);\n      props.setRows(newRows);\n    } else {\n      const newRows = [...props.rows];\n      newRows.map(row => row.search = true);\n      props.setRows(newRows);\n    }\n  };\n\n  const filterChange = operator => {\n    if (props.filterPrice !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map(row => eval(`${props.filterPrice} ${operator === \"=\" ? \"===\" : operator} ${row.total.slice(1, row.total.length)}`) ? row.search = true : row.search = false);\n      props.setRows(newRows);\n    }\n  };\n\n  return __jsx(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? __jsx(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, numSelected, \" selected\") : __jsx(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, null), numSelected > 0 ? __jsx(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteIcon, {\n    style: {\n      fontSize: 30\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }))) : __jsx(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"filter list\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, __jsx(FilterListIcon, {\n    style: {\n      fontSize: 50\n    },\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }))), __jsx(Snackbar, {\n    open: alert.open,\n    ContentProps: {\n      style: {\n        backgroundColor: alert.color\n      }\n    },\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    message: alert.message,\n    onClose: (event, reason) => {\n      if (reason === \"clickaway\") {\n        setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n          open: false\n        }));\n        const newRows = [...props.rows];\n        const names = [...undo.map(row => row.name)];\n        props.setRows(newRows.filter(row => !names.includes(row.name)));\n      }\n    },\n    action: __jsx(Button, {\n      onClick: onUndo,\n      style: {\n        color: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }\n    }, \"Undo\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: openMenu,\n    onClose: handleClose,\n    elevation: 0,\n    style: {\n      zIndex: 1302\n    },\n    keepMounted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, __jsx(MenuItem, {\n    classes: {\n      root: classes.menu\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    value: props.filterPrice,\n    onChange: handleTotalFilter,\n    placeholder: \"Enter a price to filter\",\n    InputProps: {\n      type: \"number\",\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: classes.dollarSign,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 19\n        }\n      }, \"$\")),\n      endAdornment: __jsx(InputAdornment, {\n        onClick: () => {\n          props.setTotalFilter(props.totalFilter === \">\" ? \"<\" : props.totalFilter === \"<\" ? \"=\" : \">\");\n          filterChange(props.totalFilter === \">\" ? \"<\" : props.totalFilter === \"<\" ? \"=\" : \">\");\n        },\n        position: \"end\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: classes.totalFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 19\n        }\n      }, props.totalFilter))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  chip: {\n    marginRight: \"2em\",\n    backgroundColor: theme.palette.common.blue,\n    color: \"#fff\"\n  }\n})); // export default function EnhancedTable(props) {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState(\"asc\");\n//   const [orderBy, setOrderBy] = React.useState(\"name\");\n//   const [selected, setSelected] = React.useState([]);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const [filterPrice, setFilterPrice] = React.useState(\"\");\n//   const [totalFilter, setTotalFilter] = React.useState(\">\");\n//   const handleRequestSort = (event, property) => {\n//     const isDesc = orderBy === property && order === \"desc\";\n//     setOrder(isDesc ? \"asc\" : \"desc\");\n//     setOrderBy(property);\n//   };\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = props.rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1)\n//       );\n//     }\n//     setSelected(newSelected);\n//   };\n//   const handleChangePage = (event, newPage) => {\n//     props.setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     props.setPage(0);\n//   };\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n//   const switchFilters = () => {\n//     const {\n//       websiteChecked,\n//       iOSChecked,\n//       androidChecked,\n//       softwareChecked,\n//     } = props;\n//     const websites = props.rows.filter((row) =>\n//       websiteChecked ? row.service === \"Website\" : null\n//     );\n//     const iOSApps = props.rows.filter((row) =>\n//       iOSChecked ? row.platforms.includes(\"iOS\") : null\n//     );\n//     const androidApps = props.rows.filter((row) =>\n//       androidChecked ? row.platforms.includes(\"Android\") : null\n//     );\n//     const softwareApps = props.rows.filter((row) =>\n//       softwareChecked ? row.service === \"Custom Software\" : null\n//     );\n//     if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n//       return props.rows;\n//     } else {\n//       let newRows = websites.concat(\n//         iOSApps.filter((item) => websites.indexOf(item) < 0)\n//       );\n//       let newRows2 = newRows.concat(\n//         androidApps.filter((item) => newRows.indexOf(item) < 0)\n//       );\n//       let newRows3 = newRows2.concat(\n//         softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n//       );\n//       return newRows3;\n//     }\n//   };\n//   const priceFilters = (switchRows) => {\n//     if (filterPrice !== \"\") {\n//       const newRows = [...switchRows];\n//       newRows.map((row) =>\n//         eval(\n//           `${filterPrice} ${\n//             totalFilter === \"=\" ? \"===\" : totalFilter\n//           } ${row.total.slice(1, row.total.length)}`\n//         )\n//           ? row.search === false\n//             ? null\n//             : (row.search = true)\n//           : (row.search = false)\n//       );\n//       return newRows;\n//     } else {\n//       return switchRows;\n//     }\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <Paper className={classes.paper} elevation={0}>\n//         <EnhancedTableToolbar\n//           rows={props.rows}\n//           setRows={props.setRows}\n//           selected={selected}\n//           setSelected={setSelected}\n//           numSelected={selected.length}\n//           filterPrice={filterPrice}\n//           setFilterPrice={setFilterPrice}\n//           totalFilter={totalFilter}\n//           setTotalFilter={setTotalFilter}\n//         />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size=\"medium\"\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={props.rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(\n//                 priceFilters(switchFilters()).filter((row) => row.search),\n//                 getSorting(order, orderBy)\n//               )\n//                 .slice(\n//                   props.page * rowsPerPage,\n//                   props.page * rowsPerPage + rowsPerPage\n//                 )\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ \"aria-labelledby\": labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell\n//                         align=\"center\"\n//                         component=\"th\"\n//                         id={labelId}\n//                         scope=\"row\"\n//                         padding=\"none\"\n//                       >\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"center\">{row.date}</TableCell>\n//                       <TableCell align=\"center\">{row.service}</TableCell>\n//                       <TableCell align=\"center\" style={{ width: \"5em\" }}>\n//                         {row.features}\n//                       </TableCell>\n//                       <TableCell align=\"center\">{row.complexity}</TableCell>\n//                       <TableCell align=\"center\">{row.platforms}</TableCell>\n//                       <TableCell align=\"center\">{row.users}</TableCell>\n//                       <TableCell align=\"center\">{row.total}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={\n//             priceFilters(switchFilters()).filter((row) => row.search).length\n//           }\n//           rowsPerPage={rowsPerPage}\n//           page={props.page}\n//           onChangePage={handleChangePage}\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\n//         />\n//         <Grid container justify=\"flex-end\">\n//           <Grid item>\n//             {filterPrice !== \"\" ? (\n//               <Chip\n//                 onDelete={() => {\n//                   setFilterPrice(\"\");\n//                   const newRows = [...props.rows];\n//                   newRows.map((row) => (row.search = true));\n//                   props.setRows(newRows);\n//                 }}\n//                 className={classes.chip}\n//                 label={\n//                   totalFilter === \">\"\n//                     ? `Less than $${filterPrice}`\n//                     : totalFilter === \"<\"\n//                     ? `Greater than $${filterPrice}`\n//                     : `Equal to $${filterPrice}`\n//                 }\n//               />\n//             ) : null}\n//           </Grid>\n//         </Grid>\n//       </Paper>\n//     </div>\n//   );\n// }\n\nconst handleRequestSort = (event, property) => {\n  const isDesc = orderBy === property && order === \"desc\";\n  setOrder(isDesc ? \"asc\" : \"desc\");\n  setOrderBy(property);\n};\n\nconst handleSelectAllClick = event => {\n  if (event.target.checked) {\n    const newSelecteds = props.rows.map(n => n.name);\n    setSelected(newSelecteds);\n    return;\n  }\n\n  setSelected([]);\n};\n\nconst handleClick = (event, name) => {\n  const selectedIndex = selected.indexOf(name);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, name);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n  }\n\n  setSelected(newSelected);\n};\n\nconst handleChangePage = (event, newPage) => {\n  props.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n  setRowsPerPage(parseInt(event.target.value, 10));\n  props.setPage(0);\n};\n\nconst isSelected = name => selected.indexOf(name) !== -1;\n\nconst switchFilters = () => {\n  const {\n    websiteChecked,\n    iOSChecked,\n    androidChecked,\n    softwareChecked\n  } = props;\n  const websites = props.rows.filter(row => websiteChecked ? row.service === \"Website\" : null);\n  const iOSApps = props.rows.filter(row => iOSChecked ? row.platforms.includes(\"iOS\") : null);\n  const androidApps = props.rows.filter(row => androidChecked ? row.platforms.includes(\"Android\") : null);\n  const softwareApps = props.rows.filter(row => softwareChecked ? row.service === \"Custom Software\" : null);\n\n  if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n    return props.rows;\n  } else {\n    let newRows = websites.concat(iOSApps.filter(item => websites.indexOf(item) < 0));\n    let newRows2 = newRows.concat(androidApps.filter(item => newRows.indexOf(item) < 0));\n    let newRows3 = newRows2.concat(softwareApps.filter(item => newRows2.indexOf(item) < 0));\n    return newRows3;\n  }\n};\n\nconst priceFilters = switchRows => {\n  if (filterPrice !== \"\") {\n    const newRows = [...switchRows];\n    newRows.map(row => eval(`${filterPrice} ${totalFilter === \"=\" ? \"===\" : totalFilter} ${row.total.slice(1, row.total.length)}`) ? row.search === false ? null : row.search = true : row.search = false);\n    return newRows;\n  } else {\n    return switchRows;\n  }\n};\n\nconst Project = props => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 739,\n    columnNumber: 3\n  }\n}, __jsx(TableCell, {\n  align: \"center\",\n  component: \"th\",\n  id: labelId,\n  scope: \"row\",\n  padding: \"none\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 740,\n    columnNumber: 5\n  }\n}, props.project.row.name), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 749,\n    columnNumber: 5\n  }\n}, props.project.row.date), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 750,\n    columnNumber: 5\n  }\n}, props.project.row.service), __jsx(TableCell, {\n  align: \"center\",\n  style: {\n    width: \"5em\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 751,\n    columnNumber: 5\n  }\n}, props.project.row.features), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 754,\n    columnNumber: 5\n  }\n}, props.project.row.complexity), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 755,\n    columnNumber: 5\n  }\n}, props.project.row.platforms), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 756,\n    columnNumber: 5\n  }\n}, props.project.row.users), __jsx(TableCell, {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 757,\n    columnNumber: 5\n  }\n}, props.project.row.total));\n\nexport default class EnhancedTable extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteProjects = this.deleteProjects.bind(this);\n    this.state = {\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/places/project/:pid\").then(response => {\n      this.setState({\n        projects: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteProjects(id) {\n    axios.delete(\"http://localhost:5000/api/places\" + id).then(res => console.log(res.data));\n    this.setState({\n      projects: this.state.projects.filter(el => el._id !== id)\n    });\n  }\n\n  projectList() {\n    return this.state.projects.map(currentproject => {\n      return __jsx(Project, {\n        project: currentproject,\n        deleteProjects: this.deleteProjects,\n        key: currentproject._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }\n    }, __jsx(EnhancedTableToolbar, {\n      rows: props.rows,\n      setRows: props.setRows,\n      selected: selected,\n      setSelected: setSelected,\n      numSelected: selected.length,\n      filterPrice: filterPrice,\n      setFilterPrice: setFilterPrice,\n      totalFilter: totalFilter,\n      setTotalFilter: setTotalFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 11\n      }\n    }), __jsx(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 11\n      }\n    }, __jsx(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: \"medium\",\n      \"aria-label\": \"enhanced table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 13\n      }\n    }, __jsx(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: props.rows.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 15\n      }\n    }), __jsx(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 15\n      }\n    }, stableSort(priceFilters(switchFilters()).filter(row => row.search), getSorting(order, orderBy)).slice(props.page * rowsPerPage, props.page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row.name);\n      const labelId = `enhanced-table-checkbox-${index}`;\n      return __jsx(TableRow, {\n        hover: true,\n        onClick: event => handleClick(event, row.name),\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        key: row.name,\n        selected: isItemSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 23\n        }\n      }, __jsx(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 25\n        }\n      }, __jsx(Checkbox, {\n        checked: isItemSelected,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 27\n        }\n      })), this.projectList());\n    })))), __jsx(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: priceFilters(switchFilters()).filter(row => row.search).length,\n      rowsPerPage: rowsPerPage,\n      page: props.page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 11\n      }\n    }), __jsx(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 13\n      }\n    }, filterPrice !== \"\" ? __jsx(Chip, {\n      onDelete: () => {\n        setFilterPrice(\"\");\n        const newRows = [...props.rows];\n        newRows.map(row => row.search = true);\n        props.setRows(newRows);\n      },\n      className: classes.chip,\n      label: totalFilter === \">\" ? `Less than $${filterPrice}` : totalFilter === \"<\" ? `Greater than $${filterPrice}` : `Equal to $${filterPrice}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 17\n      }\n    }) : null))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/projectManager/src/ui/EnhancedTable.js"],"names":["React","Component","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","Snackbar","Button","Menu","MenuItem","TextField","InputAdornment","Chip","Grid","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","menu","totalFilter","fontSize","common","orange","dollarSign","EnhancedTableToolbar","undo","setUndo","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","alert","setAlert","open","message","handleClick","e","currentTarget","handleClose","onDelete","newRows","rows","selectedRows","filter","row","selected","includes","name","search","setRows","setSelected","onUndo","redo","Array","prototype","push","apply","handleTotalFilter","setFilterPrice","target","value","eval","total","slice","length","filterChange","operator","filterPrice","style","vertical","horizontal","reason","names","zIndex","startAdornment","endAdornment","setTotalFilter","cursor","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","chip","marginRight","blue","handleRequestSort","isDesc","setOrder","setOrderBy","handleSelectAllClick","checked","newSelecteds","n","selectedIndex","indexOf","newSelected","concat","handleChangePage","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","parseInt","isSelected","switchFilters","websiteChecked","iOSChecked","androidChecked","softwareChecked","websites","service","iOSApps","platforms","androidApps","softwareApps","item","newRows2","newRows3","priceFilters","switchRows","Project","labelId","project","date","features","complexity","users","EnhancedTable","constructor","deleteProjects","bind","state","projects","componentDidMount","axios","get","then","response","setState","data","catch","error","console","log","delete","res","_id","projectList","currentproject","render","page","rowsPerPage","isItemSelected"],"mappings":"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AAAA,QAAQ,EAAE,QALI;AAMdC,IAAAA,OAAO,EAAE,CANK;AAOdC,IAAAA,QAAQ,EAAE,UAPI;AAQdC,IAAAA,GAAG,EAAE,EARS;AASdZ,IAAAA,KAAK,EAAE;AATO,GAXuB;AAsBvCa,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,KADT;AAEJnF,IAAAA,eAAe,EAAEX,KAAK,CAACM,OAAN,CAAce,MAAd,CAAqB0E,IAFlC;AAGJvF,IAAAA,KAAK,EAAE;AAHH;AAtBiC,CAAZ,CAAD,CAA5B,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: \"name\", label: \"Name\" },\n  { id: \"date\", label: \"Date\" },\n  { id: \"service\", label: \"Service\" },\n  { id: \"features\", label: \"Features\" },\n  { id: \"complexity\", label: \"Complexity\" },\n  { id: \"platforms\", label: \"Platforms\" },\n  { id: \"users\", label: \"Users\" },\n  { id: \"total\", label: \"Total\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n  menu: {\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n  totalFilter: {\n    fontSize: \"2rem\",\n    color: theme.palette.common.orange,\n  },\n  dollarSign: {\n    fontSize: \"1.5rem\",\n    color: theme.palette.common.orange,\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n  const [undo, setUndo] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openMenu, setOpenMenu] = React.useState(false);\n\n  const [alert, setAlert] = React.useState({\n    open: false,\n    color: \"#FF3232\",\n    message: \"Row deleted!\",\n  });\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const onDelete = () => {\n    const newRows = [...props.rows];\n    const selectedRows = newRows.filter((row) =>\n      props.selected.includes(row.name)\n    );\n    selectedRows.map((row) => (row.search = false));\n    props.setRows(newRows);\n\n    setUndo(selectedRows);\n    props.setSelected([]);\n    setAlert({ ...alert, open: true });\n  };\n\n  const onUndo = () => {\n    setAlert({ ...alert, open: false });\n    const newRows = [...props.rows];\n    const redo = [...undo];\n    redo.map((row) => (row.search = true));\n    Array.prototype.push.apply(newRows, ...redo);\n    props.setRows(newRows);\n  };\n\n  const handleTotalFilter = (event) => {\n    props.setFilterPrice(event.target.value);\n\n    if (event.target.value !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map((row) =>\n        eval(\n          `${event.target.value} ${\n            props.totalFilter === \"=\" ? \"===\" : props.totalFilter\n          } ${row.total.slice(1, row.total.length)}`\n        )\n          ? (row.search = true)\n          : (row.search = false)\n      );\n      props.setRows(newRows);\n    } else {\n      const newRows = [...props.rows];\n      newRows.map((row) => (row.search = true));\n      props.setRows(newRows);\n    }\n  };\n\n  const filterChange = (operator) => {\n    if (props.filterPrice !== \"\") {\n      const newRows = [...props.rows];\n      newRows.map((row) =>\n        eval(\n          `${props.filterPrice} ${\n            operator === \"=\" ? \"===\" : operator\n          } ${row.total.slice(1, row.total.length)}`\n        )\n          ? (row.search = true)\n          : (row.search = false)\n      );\n      props.setRows(newRows);\n    }\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {null}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={onDelete}>\n            <DeleteIcon style={{ fontSize: 30 }} color=\"primary\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={handleClick}>\n            <FilterListIcon style={{ fontSize: 50 }} color=\"secondary\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Snackbar\n        open={alert.open}\n        ContentProps={{\n          style: {\n            backgroundColor: alert.color,\n          },\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        message={alert.message}\n        onClose={(event, reason) => {\n          if (reason === \"clickaway\") {\n            setAlert({ ...alert, open: false });\n            const newRows = [...props.rows];\n            const names = [...undo.map((row) => row.name)];\n            props.setRows(newRows.filter((row) => !names.includes(row.name)));\n          }\n        }}\n        action={\n          <Button onClick={onUndo} style={{ color: \"#fff\" }}>\n            Undo\n          </Button>\n        }\n      />\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n      >\n        <MenuItem classes={{ root: classes.menu }}>\n          <TextField\n            value={props.filterPrice}\n            onChange={handleTotalFilter}\n            placeholder=\"Enter a price to filter\"\n            InputProps={{\n              type: \"number\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <span className={classes.dollarSign}>$</span>\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment\n                  onClick={() => {\n                    props.setTotalFilter(\n                      props.totalFilter === \">\"\n                        ? \"<\"\n                        : props.totalFilter === \"<\"\n                        ? \"=\"\n                        : \">\"\n                    );\n                    filterChange(\n                      props.totalFilter === \">\"\n                        ? \"<\"\n                        : props.totalFilter === \"<\"\n                        ? \"=\"\n                        : \">\"\n                    );\n                  }}\n                  position=\"end\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <span className={classes.totalFilter}>\n                    {props.totalFilter}\n                  </span>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </MenuItem>\n      </Menu>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  chip: {\n    marginRight: \"2em\",\n    backgroundColor: theme.palette.common.blue,\n    color: \"#fff\",\n  },\n}));\n\n// export default function EnhancedTable(props) {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState(\"asc\");\n//   const [orderBy, setOrderBy] = React.useState(\"name\");\n//   const [selected, setSelected] = React.useState([]);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const [filterPrice, setFilterPrice] = React.useState(\"\");\n//   const [totalFilter, setTotalFilter] = React.useState(\">\");\n\n//   const handleRequestSort = (event, property) => {\n//     const isDesc = orderBy === property && order === \"desc\";\n//     setOrder(isDesc ? \"asc\" : \"desc\");\n//     setOrderBy(property);\n//   };\n\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = props.rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1)\n//       );\n//     }\n\n//     setSelected(newSelected);\n//   };\n\n//   const handleChangePage = (event, newPage) => {\n//     props.setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     props.setPage(0);\n//   };\n\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n\n//   const switchFilters = () => {\n//     const {\n//       websiteChecked,\n//       iOSChecked,\n//       androidChecked,\n//       softwareChecked,\n//     } = props;\n\n//     const websites = props.rows.filter((row) =>\n//       websiteChecked ? row.service === \"Website\" : null\n//     );\n\n//     const iOSApps = props.rows.filter((row) =>\n//       iOSChecked ? row.platforms.includes(\"iOS\") : null\n//     );\n\n//     const androidApps = props.rows.filter((row) =>\n//       androidChecked ? row.platforms.includes(\"Android\") : null\n//     );\n\n//     const softwareApps = props.rows.filter((row) =>\n//       softwareChecked ? row.service === \"Custom Software\" : null\n//     );\n\n//     if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n//       return props.rows;\n//     } else {\n//       let newRows = websites.concat(\n//         iOSApps.filter((item) => websites.indexOf(item) < 0)\n//       );\n\n//       let newRows2 = newRows.concat(\n//         androidApps.filter((item) => newRows.indexOf(item) < 0)\n//       );\n\n//       let newRows3 = newRows2.concat(\n//         softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n//       );\n\n//       return newRows3;\n//     }\n//   };\n\n//   const priceFilters = (switchRows) => {\n//     if (filterPrice !== \"\") {\n//       const newRows = [...switchRows];\n//       newRows.map((row) =>\n//         eval(\n//           `${filterPrice} ${\n//             totalFilter === \"=\" ? \"===\" : totalFilter\n//           } ${row.total.slice(1, row.total.length)}`\n//         )\n//           ? row.search === false\n//             ? null\n//             : (row.search = true)\n//           : (row.search = false)\n//       );\n//       return newRows;\n//     } else {\n//       return switchRows;\n//     }\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <Paper className={classes.paper} elevation={0}>\n//         <EnhancedTableToolbar\n//           rows={props.rows}\n//           setRows={props.setRows}\n//           selected={selected}\n//           setSelected={setSelected}\n//           numSelected={selected.length}\n//           filterPrice={filterPrice}\n//           setFilterPrice={setFilterPrice}\n//           totalFilter={totalFilter}\n//           setTotalFilter={setTotalFilter}\n//         />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size=\"medium\"\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={props.rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(\n//                 priceFilters(switchFilters()).filter((row) => row.search),\n//                 getSorting(order, orderBy)\n//               )\n//                 .slice(\n//                   props.page * rowsPerPage,\n//                   props.page * rowsPerPage + rowsPerPage\n//                 )\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ \"aria-labelledby\": labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell\n//                         align=\"center\"\n//                         component=\"th\"\n//                         id={labelId}\n//                         scope=\"row\"\n//                         padding=\"none\"\n//                       >\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"center\">{row.date}</TableCell>\n//                       <TableCell align=\"center\">{row.service}</TableCell>\n//                       <TableCell align=\"center\" style={{ width: \"5em\" }}>\n//                         {row.features}\n//                       </TableCell>\n//                       <TableCell align=\"center\">{row.complexity}</TableCell>\n//                       <TableCell align=\"center\">{row.platforms}</TableCell>\n//                       <TableCell align=\"center\">{row.users}</TableCell>\n//                       <TableCell align=\"center\">{row.total}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={\n//             priceFilters(switchFilters()).filter((row) => row.search).length\n//           }\n//           rowsPerPage={rowsPerPage}\n//           page={props.page}\n//           onChangePage={handleChangePage}\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\n//         />\n//         <Grid container justify=\"flex-end\">\n//           <Grid item>\n//             {filterPrice !== \"\" ? (\n//               <Chip\n//                 onDelete={() => {\n//                   setFilterPrice(\"\");\n//                   const newRows = [...props.rows];\n//                   newRows.map((row) => (row.search = true));\n//                   props.setRows(newRows);\n//                 }}\n//                 className={classes.chip}\n//                 label={\n//                   totalFilter === \">\"\n//                     ? `Less than $${filterPrice}`\n//                     : totalFilter === \"<\"\n//                     ? `Greater than $${filterPrice}`\n//                     : `Equal to $${filterPrice}`\n//                 }\n//               />\n//             ) : null}\n//           </Grid>\n//         </Grid>\n//       </Paper>\n//     </div>\n//   );\n// }\n\nconst handleRequestSort = (event, property) => {\n  const isDesc = orderBy === property && order === \"desc\";\n  setOrder(isDesc ? \"asc\" : \"desc\");\n  setOrderBy(property);\n};\n\nconst handleSelectAllClick = (event) => {\n  if (event.target.checked) {\n    const newSelecteds = props.rows.map((n) => n.name);\n    setSelected(newSelecteds);\n    return;\n  }\n  setSelected([]);\n};\n\nconst handleClick = (event, name) => {\n  const selectedIndex = selected.indexOf(name);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, name);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1)\n    );\n  }\n\n  setSelected(newSelected);\n};\n\nconst handleChangePage = (event, newPage) => {\n  props.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = (event) => {\n  setRowsPerPage(parseInt(event.target.value, 10));\n  props.setPage(0);\n};\n\nconst isSelected = (name) => selected.indexOf(name) !== -1;\n\nconst switchFilters = () => {\n  const { websiteChecked, iOSChecked, androidChecked, softwareChecked } = props;\n\n  const websites = props.rows.filter((row) =>\n    websiteChecked ? row.service === \"Website\" : null\n  );\n\n  const iOSApps = props.rows.filter((row) =>\n    iOSChecked ? row.platforms.includes(\"iOS\") : null\n  );\n\n  const androidApps = props.rows.filter((row) =>\n    androidChecked ? row.platforms.includes(\"Android\") : null\n  );\n\n  const softwareApps = props.rows.filter((row) =>\n    softwareChecked ? row.service === \"Custom Software\" : null\n  );\n\n  if (!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked) {\n    return props.rows;\n  } else {\n    let newRows = websites.concat(\n      iOSApps.filter((item) => websites.indexOf(item) < 0)\n    );\n\n    let newRows2 = newRows.concat(\n      androidApps.filter((item) => newRows.indexOf(item) < 0)\n    );\n\n    let newRows3 = newRows2.concat(\n      softwareApps.filter((item) => newRows2.indexOf(item) < 0)\n    );\n\n    return newRows3;\n  }\n};\n\nconst priceFilters = (switchRows) => {\n  if (filterPrice !== \"\") {\n    const newRows = [...switchRows];\n    newRows.map((row) =>\n      eval(\n        `${filterPrice} ${\n          totalFilter === \"=\" ? \"===\" : totalFilter\n        } ${row.total.slice(1, row.total.length)}`\n      )\n        ? row.search === false\n          ? null\n          : (row.search = true)\n        : (row.search = false)\n    );\n    return newRows;\n  } else {\n    return switchRows;\n  }\n};\n\nconst Project = (props) => (\n  <React.Fragment>\n    <TableCell\n      align=\"center\"\n      component=\"th\"\n      id={labelId}\n      scope=\"row\"\n      padding=\"none\"\n    >\n      {props.project.row.name}\n    </TableCell>\n    <TableCell align=\"center\">{props.project.row.date}</TableCell>\n    <TableCell align=\"center\">{props.project.row.service}</TableCell>\n    <TableCell align=\"center\" style={{ width: \"5em\" }}>\n      {props.project.row.features}\n    </TableCell>\n    <TableCell align=\"center\">{props.project.row.complexity}</TableCell>\n    <TableCell align=\"center\">{props.project.row.platforms}</TableCell>\n    <TableCell align=\"center\">{props.project.row.users}</TableCell>\n    <TableCell align=\"center\">{props.project.row.total}</TableCell>\n  </React.Fragment>\n);\n\nexport default class EnhancedTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteProjects = this.deleteProjects.bind(this);\n\n    this.state = { projects: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/places/project/:pid\")\n      .then((response) => {\n        this.setState({ projects: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteProjects(id) {\n    axios\n      .delete(\"http://localhost:5000/api/places\" + id)\n      .then((res) => console.log(res.data));\n\n    this.setState({\n      projects: this.state.projects.filter((el) => el._id !== id),\n    });\n  }\n\n  projectList() {\n    return this.state.projects.map((currentproject) => {\n      return (\n        <Project\n          project={currentproject}\n          deleteProjects={this.deleteProjects}\n          key={currentproject._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper} elevation={0}>\n          <EnhancedTableToolbar\n            rows={props.rows}\n            setRows={props.setRows}\n            selected={selected}\n            setSelected={setSelected}\n            numSelected={selected.length}\n            filterPrice={filterPrice}\n            setFilterPrice={setFilterPrice}\n            totalFilter={totalFilter}\n            setTotalFilter={setTotalFilter}\n          />\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={props.rows.length}\n              />\n              <TableBody>\n                {stableSort(\n                  priceFilters(switchFilters()).filter((row) => row.search),\n                  getSorting(order, orderBy)\n                )\n                  .slice(\n                    props.page * rowsPerPage,\n                    props.page * rowsPerPage + rowsPerPage\n                  )\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.name)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ \"aria-labelledby\": labelId }}\n                          />\n                        </TableCell>\n                        {this.projectList()}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={\n              priceFilters(switchFilters()).filter((row) => row.search).length\n            }\n            rowsPerPage={rowsPerPage}\n            page={props.page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              {filterPrice !== \"\" ? (\n                <Chip\n                  onDelete={() => {\n                    setFilterPrice(\"\");\n                    const newRows = [...props.rows];\n                    newRows.map((row) => (row.search = true));\n                    props.setRows(newRows);\n                  }}\n                  className={classes.chip}\n                  label={\n                    totalFilter === \">\"\n                      ? `Less than $${filterPrice}`\n                      : totalFilter === \"<\"\n                      ? `Greater than $${filterPrice}`\n                      : `Equal to $${filterPrice}`\n                  }\n                />\n              ) : null}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}